<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema 

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        hLouUICAg//Z
</value>
  </data>
</root>